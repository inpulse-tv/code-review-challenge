@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

$min_width: 320px;
$max_width: 2150px;
$min_font: 16px;
$max_font: 68px;

$ripple_duration: 600;
$good_answer_color: rgba(18, 236, 84, 0.7);
$bad_answer_color: rgba(236, 62, 18, 0.7);

:export {
  rippleDuration: $ripple_duration;
}

:global(pre.prettyprint) {
  border: none !important;
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
  margin: 1.8vw;
  code {
    white-space: pre-wrap;
    display: inline-block;
  }
}

span.ripple {
  position: absolute;
  border-radius: 50%;
  transform: scale(0);
  animation: ripple $ripple_duration+ms linear;

  &-good {
    background-color: $good_answer_color;
  }

  &-bad {
    background-color: $bad_answer_color;
  }
}

@keyframes ripple {
  to {
    transform: scale(1);
    opacity: 0;
  }
}