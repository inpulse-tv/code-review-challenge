[
  {
    "id": 1,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT u.desk, SUM(t.AmountEur) as SumAmountEur, COUNT(1) as nbTrades\nFROM Users u\nINNER JOIN Trades t in t.Trader = u.Login\nWHERE t.Counterparty = ‘SG’\nGROUP BY u.Desk\nORDER BY u.Desk",
    "language": "sql",
    "range": {
      "start": 102,
      "length": 4
    }
  },
  {
    "id": 2,
    "statement": "Trouvez la faute de syntaxe",
    "code": "numpy as np\nB = np.ones((3,2))\nprint(B)\nB.shape\nB.sum()",
    "language": "py",
    "range": {
      "start": 0,
      "length": 5
    }
  },
  {
    "id": 3,
    "statement": "Trouvez la faute de syntaxe",
    "code": "def mafonction(a,b,c):\n    resultat = a+b*b+c\n    rturn resultat",
    "language": "py",
    "range": {
      "start": 50,
      "length": 5
    }
  },
  {
    "id": 4,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT pub_id, GROUP_CONCAT(DISTINCT cate_id)\nFROM book_mast\nGROUP BY pub_id\nORDER BY GROUP_CONCAT(DISTINCT cate) ASC;",
    "language": "sql",
    "range": {
      "start": 108,
      "length": 4
    }
  },
  {
    "id": 5,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT pub_id, GROUP_CONCAT(DISTINCT cate_id)\nFROM book_mast\nGROUP pub_id;",
    "language": "sql",
    "range": {
      "start": 64,
      "length": 5
    }
  },
  {
    "id": 6,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT student.first_name, student.last_name, AVG(mark) avg_mark \nFROM subject\nJOIN student on student.ID = subject.stud_id\nJOIN marks on marks.id = subject.mark_id\nGROUP BY student.first, student.last\nHAVING AVG(mar) > 9;",
    "language": "sql",
    "range": {
      "start": 212,
      "length": 5
    }
  },
  {
    "id": 7,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT SUM(total_cost)\nFROM purchase\nWHERE cate_id = CA2019;",
    "language": "sql",
    "range": {
      "start": 53,
      "length": 6
    }
  },
  {
    "id": 8,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT cate_id,\nSUM(receive_qty*purch_price)\nFOR purchase\nGROUP BY cate_id;",
    "language": "sql",
    "range": {
      "start": 45,
      "length": 3
    }
  },
  {
    "id": 9,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT SUM(mysum)\nFROM(\nSELECT COUNT(*) :: mysum\nFROM book_mast\nWHERE no_page>200) AS bb;",
    "language": "sql",
    "range": {
      "start": 39,
      "length": 4
    }
  },
  {
    "id": 10,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT L.NomLog, L.PrixLog FROM Logiciel L INNER JOIN Projet P\nON L.NumProj=P.NumProj WHERE P.TitreProj 'gestion de stock'\nORDER BY L.PrixLog DESC;",
    "language": "sql",
    "range": {
      "start": 101,
      "length": 5
    }
  },
  {
    "id": 11,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT NumProj, TitreProj FROM Projet P\nINNER JOIN Realisation R ON P.NumProj=R.NumProj\nGROUP BY NumProj TitreProj\nHAVING count(*)=(SELECT COUNT(*) FROM Developpeur);",
    "language": "sql",
    "range": {
      "start": 102,
      "length": 5
    }
  },
  {
    "id": 12,
    "statement": "Trouvez la faute de syntaxe",
    "code": "SELECT COUNT(*) FROM ENSEIGNANT E\nINNER JOIN MATIERE M ON M.CodeMat=E.CodeMat \nWHERE M NomMat='Informatique';",
    "language": "sql",
    "range": {
      "start": 85,
      "length": 5
    }
  },
  {
    "id": 13,
    "statement": "Quelle condition est exécutée ?",
    "code": "#!/bin/bash\nn=10\nif [ $n -lt 10 ];\nthen\necho \"Click here if this is executed\"\nelse\necho \"Click here if this is executed\"\nfi",
    "language": "bash",
    "range": {
      "start": 89,
      "length": 30
    }
  },
  {
    "id": 14,
    "statement": "Trouvez la faute de syntaxe",
    "code": "x = 67;\ny = 33;\n\ny *= 2;\ny++;\n\nif ( x = y ) {\n  cout << \"X and Y are equal\";\n} else {\n  cout << \"X and Y are not equal\";\n}",
    "language": "cpp",
    "range": {
      "start": 36,
      "length": 5
    }
  },
  {
    "id": 15,
    "statement": "Qu'elle est la valeur de sortie ?",
    "code": "y = 33;\ny <<= 1;\ncout << y;\n\n33\n34\n16\n66\nfalse",
    "language": "cpp",
    "range": {
      "start": 50,
      "length": 2
    }
  },
  {
    "id": 16,
    "statement": "Trouvez la faute de syntaxe",
    "code": "<html>\n  <body>\n    <p><a link=\"https://inpulse.tv\">link</a></p>\n  </body>\n</html>",
    "language": "html",
    "range": {
      "start": 47,
      "length": 4
    }
  },
  {
    "id": 17,
    "statement": "Cliquez sur la vraie déclaration",
    "code": "( x/4 == x>>2 )\n( x*4 == x<<2 )\n( x*4 == x>>2 )\n( x/4 == x<<2 )",
    "language": "cpp",
    "range": {
      "start": 21,
      "length": 22
    }
  },
  {
    "id": 18,
    "statement": "Trouvez la faute de syntaxe",
    "code": "<html onload=\"alert('html is loaded')\">\n  <body onload=\"alert('body is loaded')\">\n    <p>lorem ipsum</p>\n  </body>\n</html>>",
    "language": "html",
    "range": {
      "start": 9,
      "length": 32
    }
  },
  {
    "id": 19,
    "statement": "Go est un language de progammation qui est ...",
    "code": "- compilé\n- interprété\n- typé dynamiquement",
    "language": "go",
    "nocode": true,
    "range": {
      "start": 0,
      "length": 9
    }
  },
  {
    "id": 20,
    "statement": "Quelle réponse est syntaxiquement correcte ?",
    "code": "- var int a\n- var a, b, java bool\n- var := 3",
    "language": "go",
    "range": {
      "start": 11,
      "length": 22
    }
  },
  {
    "id": 21,
    "statement": "Trouvez la faute de syntaxe",
    "code": "package main\nimport \"fmt\"\n\nfunc main() {\n  var i int\n  var f float64\n  var b boolean\n  var s string\n  fmt.Printf(\"%v %v %v %q\\n\", i, f, b, s)\n}",
    "language": "go",
    "range": {
      "start": 77,
      "length": 7
    }
  },
  {
    "id": 22,
    "statement": "De quelle manière doit-on convertir en décimal une variable a ?",
    "code": "- float64(a)\n- var a float64 = float64(a)\n- var b float64 = float64(a)",
    "language": "go",
    "range": {
      "start": 44,
      "length": 28
    }
  },
  {
    "id": 23,
    "statement": "Trouvez la faute de syntaxe",
    "code": "func main() {\n  names := string[4]{\n      \"John\",\n      \"Paul\",\n      \"George\",\n      \"Ringo\",\n  }\n  fmt.Print(names)\n}",
    "language": "go",
    "range": {
      "start": 30,
      "length": 5
    }
  },
  {
    "id": 24,
    "statement": "Sur quels types de données pouvez-vous utiliser \"for -range\" ?",
    "code": "- array, slice, map\n- slice, map, array, string, channel\n- slice, string, map, channel\n- slice, map, string",
    "language": "go",
    "nocode": true,
    "range": {
      "start": 20,
      "length": 36
    }
  },
  {
    "id": 25,
    "statement": "Quand la fonction init() sera-t-elle appelée ?",
    "code": "- Après avoir importé un package avec une fonction init() définie\n- Seulement quand on l'appelle\n- Après la fonction main() dans le package principal",
    "language": "go",
    "nocode": true,
    "range": {
      "start": 66,
      "length": 30
    }
  },
  {
    "id": 26,
    "code": "int addOneTo(int value) {\n  // Quel retour de valeur est incorrect ?\n  return value++;\n  return ++value;\n  return value +1;\n}",
    "language": "cpp",
    "range": {
      "start": 71,
      "length": 15
    }
  },
  {
    "id": 27,
    "statement": "Quel est le résultat de ce code ?",
    "code": "fruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'apple', 'banana']\nfruits.count('apple')\n\n- 1\n- Orange\n- Kiwi\n- 2",
    "language": "py",
    "range": {
      "start": 117,
      "length": 3
    }
  },
  {
    "id": 28,
    "statement": "Quel est le résultat de ce code ?",
    "code": "fruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'apple', 'banana']\nfruits.index('banana', 4)\n\n- 5\n- Banana\n- 6",
    "language": "py",
    "range": {
      "start": 114,
      "length": 3
    }
  },
  {
    "id": 29,
    "statement": "Quel est le résultat de ce code ?",
    "code": "fruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'apple', 'banana']\nfruits.index('banana', 1)\n\n- 3\n- Banana\n- 6",
    "language": "py",
    "range": {
      "start": 101,
      "length": 3
    }
  },
  {
    "id": 30,
    "statement": "Quelle sera la valeur de sortie du code suivant :",
    "code": "stack = [3, 4, 5]\nstack.append(6)\nstack.pop()\n\n- 1\n- 6\n- [3, 4, 5, 6]",
    "language": "py",
    "range": {
      "start": 51,
      "length": 3
    }
  },
  {
    "id": 31,
    "statement": "Quel est le résultat de ce code ?",
    "code": "from collections import deque\nqueue = deque([\"Eric\", \"John\", \"Michael\"])\nqueue.popleft()\n\n- John\n- Eric\n- 0",
    "language": "py",
    "range": {
      "start": 97,
      "length": 6
    }
  },
  {
    "id": 32,
    "statement": "Quel est le résultat de ce code ?",
    "code": "squares = []\nfor x in range(10):\n  squares.append(x**2)\nsquares\n\n- [0, 1, 2, 3, 4, 8, 16, 32, 64, 81]\n- [0, 1, 4, 9, 18, 50, 36, 49, 64, 81]\n- [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]",
    "language": "py",
    "range": {
      "start": 141,
      "length": 38
    }
  },
  {
    "id": 33,
    "statement": "Quel est le résultat de ce code ?",
    "code": "from math import pi\n[str(round(pi, i)) for i in range(1, 6)]\n\n- ['3.1', '3.14', '3.142', '3.1416', '3.14159']\n- ['3.1', '3.14', '3.100', '3.1400', '3.14000']\n- ['3.1', '3.14', '3.140', '3.1410', '3.14150']",
    "language": "py",
    "range": {
      "start": 62,
      "length": 47
    }
  },
  {
    "id": 34,
    "statement": "Trouvez la faute de syntaxe",
    "code": "float circonference ( float diameter ) {\n  int pi = 3.1415926;\n  return diameter * pi;\n}",
    "language": "cpp",
    "range": {
      "start": 42,
      "length": 5
    }
  },
  {
    "id": 35,
    "statement": "Trouvez la faute de syntaxe",
    "code": "float circonference ( float diameter ) {\n  float pi = 3.1415926   \n  return diameter * pi;\n}",
    "language": "cpp",
    "range": {
      "start": 60,
      "length": 6
    }
  },
  {
    "id": 36,
    "statement": "Quel est le résultat de sortie dans la console ?",
    "code": "console.log(\"1\");\nsetTimeout(() => console.log(\"2\"), 0);\nsetTimeout(() => console.log(\"3\"), 100);\nconsole.log(\"4\");\n\n- 1 2 3 4\n- 1 2 4 3\n- 1 4 2 3",
    "language": "js",
    "range": {
      "start": 142,
      "length": 11
    }
  },
  {
    "id": 37,
    "statement": "Trouvez la faute de syntaxe",
    "code": "input[type=\"text\"] {\n  font-size: 0.8em;\n  font-weight: bold;\n  font-color: black;\n}",
    "language": "css",
    "range": {
      "start": 64,
      "length": 10
    }
  },
  {
    "id": 38,
    "statement": "Trouvez la faute de syntaxe",
    "code": "const element = {\n  type: 'h1',\n  props: {\n    className: 'greeting'   \n    children: 'Hello world !'\n  }\n};",
    "language": "js",
    "range": {
      "start": 64,
      "length": 7
    }
  },
  {
    "id": 39,
    "statement": "Quelle liste de mots clés corresponds au langage Java ?",
    "code": "- static, super, const, void\n- private, void, float, final\n- async, bool, using, const",
    "language": "java",
    "nocode": true,
    "range": {
      "start": 29,
      "length": 29
    }
  },
  {
    "id": 40,
    "statement": "Quelle liste de mots clés corresponds au langage C# ?",
    "code": "- static, super, const, void\n- private, void, float, final\n- async, bool, using, const",
    "language": "cs",
    "nocode": true,
    "range": {
      "start": 59,
      "length": 27
    }
  },
  {
    "id": 41,
    "statement": "Quelle liste de mots clés corresponds au langage TypeScript ?",
    "code": "- static, super, const, void\n- private, void, float, final\n- async, bool, using, const",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 0,
      "length": 28
    }
  },
  {
    "id": 42,
    "statement": "Trouvez la faute de syntaxe",
    "code": "const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet odds = numbers.map(item => item % 2 > 0);",
    "language": "js",
    "range": {
      "start": 66,
      "length": 5
    }
  },
  {
    "id": 43,
    "statement": "Trouvez la faute de syntaxe",
    "code": "git init -b main\ngit add .\ngit push -m \"First commit\"",
    "language": "bash",
    "range": {
      "start": 31,
      "length": 4
    }
  },
  {
    "id": 44,
    "statement": "Trouvez la faute de syntaxe",
    "code": "async function asyncCall() {\n  const result = waiting getData();\n  console.log(result);\n}\n\nasyncCall();",
    "language": "js",
    "range": {
      "start": 46,
      "length": 7
    }
  },
  {
    "id": 45,
    "statement": "Quel est le résultat de sortie ?",
    "code": "let fruits = ['orange', 'apple', 'pear', 'banana'];\nlet copy = [...fruits];\nfruits.push('kiwi');\ncopy.shift();\nconsole.log(copy);\n\n- [ 'orange', 'apple', 'pear', 'banana', 'kiwi' ]\n- [ 'apple', 'pear', 'banana' ]\n- [ 'apple', 'pear', 'banana', 'kiwi' ]",
    "language": "js",
    "range": {
      "start": 181,
      "length": 31
    }
  },
  {
    "id": 46,
    "statement": "Quel est le résultat de sortie ?",
    "code": "let fruits = [{fruit:'orange', nb: 5}, {fruit:'apple', nb: 2}, {fruit:'banana', nb: 4}];\nfunction maFonction(x) {\n  console.log(x.length);\n}\nmaFonction(...fruits);\n\n- 0\n- undefined\n- 3",
    "language": "js",
    "range": {
      "start": 169,
      "length": 11
    }
  },
  {
    "id": 47,
    "statement": "Quel est le résultat de sortie ?",
    "code": "let fruits = [{fruit:'orange', nb: 5}, {fruit:'apple', nb: 2}, {fruit:'banana', nb: 4}];\nfunction maFonction(x) {\n  console.log(x.length);\n}\nmaFonction([...fruits]);\n\n- 0\n- undefined\n- 3",
    "language": "js",
    "range": {
      "start": 183,
      "length": 3
    }
  },
  {
    "id": 48,
    "statement": "Quelle réponse n'est pas valable pour remplacer X dans le code ci-dessous :",
    "code": "X fruits = new List();\nfruits.add(\"Apple\");\n\n- var\n- let\n- List<String>",
    "language": "cs",
    "range": {
      "start": 51,
      "length": 5
    }
  },
  {
    "id": 49,
    "statement": "Qu'est-ce qu'une IIFE ?",
    "code": "- Une fonction asynchrone.\n- Une fonction exécutée dès qu'elle est définie.\n- Une fonction non protégée des variables globales.",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 27,
      "length": 48
    }
  },
  {
    "id": 50,
    "statement": "Trouvez la faute de syntaxe",
    "code": "static void Main(string[] args)\n{\n  Console.Clear();\n  DateTime date = DateTime.Now;\n  Console.WriteLn(\"\\nToday is {0:d} at {0:T}.\", date);\n}",
    "language": "cs",
    "range": {
      "start": 95,
      "length": 7
    }
  },
  {
    "id": 51,
    "statement": "De quelle manière écrit-t-on un héritage de classe ?",
    "code": "- class A implements B\n- class A : B\n- class A extends B\n- class A inherits B",
    "language": "java",
    "range": {
      "start": 37,
      "length": 19
    }
  },
  {
    "id": 52,
    "statement": "De quelle manière écrit-t-on un héritage de classe ?",
    "code": "- class A implements B\n- class A : B\n- class A extends B\n- class A inherits B",
    "language": "cs",
    "range": {
      "start": 23,
      "length": 13
    }
  },
  {
    "id": 53,
    "statement": "Dans une sous-classe, une méthode redéfinie doit être déclarée ...",
    "code": "- sealed\n- virtual\n- override\n- internal",
    "language": "cs",
    "range": {
      "start": 19,
      "length": 10
    }
  },
  {
    "id": 54,
    "statement": "Dans une classe, une propriété \"static\" ...",
    "code": "- Ne peut être héritée.\n- Est constante.\n- Possède la même valeur pour toutes les instances de la classe.\n- Ne peut être accédée depuis une autre classe.",
    "language": "cs",
    "nocode": true,
    "range": {
      "start": 41,
      "length": 64
    }
  },
  {
    "id": 55,
    "statement": "Quelle est la valeur par défaut de la propriété \"position\" ?",
    "code": "- fixed\n- relative\n- absolute\n- static",
    "language": "css",
    "range": {
      "start": 30,
      "length": 8
    }
  },
  {
    "id": 56,
    "statement": "Comment rédigez vous la bordure ci-après:\nTop border = 8 pixels\nBottom border = 3 pixels\nLeft border = 12 pixels\nRight border = 1 pixel",
    "code": "- border-width:8px 12px 5px 1px;\n- border-width:8px 1px 3px 12px;\n- border-width:3px 12px 8px 1px;\n- border-width:8px 3px 12px 1px;",
    "language": "css",
    "range": {
      "start": 33,
      "length": 32
    }
  },
  {
    "id": 57,
    "statement": "Quelle est la bonne façon de créer un objet appelé myObj de MyClass ?",
    "code": "- new myObj = MyClass();\n- MyClass myObj = new MyClass();\n- class myObj = new MyClass();\n- class MyClass = new myObj();",
    "language": "java",
    "range": {
      "start": 25,
      "length": 32
    }
  },
  {
    "id": 58,
    "statement": "Quelle méthode peut être utilisée pour trouver la valeur la plus élevée de x et y ?",
    "code": "- Math.maxNum(x,y)\n- Math.maximum(x,y)\n- Math.max(x,y)\n- Math.largest(x,y)",
    "language": "java",
    "range": {
      "start": 39,
      "length": 15
    }
  },
  {
    "id": 59,
    "statement": "Dans Git, quelle est la commande pour ajouter le référentiel distant \"https://inpulse.tv/repo/project.git\" comme \"origin\" ?",
    "code": "- git origin=https://inpulse.tv/repo/project.git\n- git remote add origin https://inpulse.tv/repo/project.git \n- git add origin https://inpulse.tv/repo/project.git\n- git remote https://inpulse.tv/repo/project.git",
    "language": "bash",
    "range": {
      "start": 49,
      "length": 59
    }
  },
  {
    "id": 60,
    "statement": "Git Pull est une combinaison de :",
    "code": "- branch et checkout\n- add et commit \n- fetch et merge",
    "language": "bash",
    "range": {
      "start": 38,
      "length": 16
    }
  },
  {
    "id": 61,
    "statement": "Laquelle de ces affirmations est fausse pour le décorateur \"@Injectable\" d'Angular ?",
    "code": "- Permet la génération des métadonnées nécessaires pour créer les dépendances de la classe lors de l'injection.\n- Génère autant d'instance que nécessaire quand il est fournie et injectée comme dépendance dans un composant.\n- Lorsqu'on fournis le service au niveau racine, Angular crée une seule instance partagée du service.",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 112,
      "length": 110
    }
  },
  {
    "id": 62,
    "statement": "A quoi sert la directive \"<router-outlet>\" sous Angular ?",
    "code": "- Agit comme un lien de redirection lors d'un click de l'utilisateur.\n- Agit comme un espace réservé qu'Angular remplit dynamiquement en fonction de l'état actuel du routeur.\n- Agit comme un service de routeur en fournissant le chemin et les paramètres de la route.",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 70,
      "length": 104
    }
  },
  {
    "id": 63,
    "statement": "Soit le Hook React suivant, indiquez la faute de syntaxe.",
    "code": "import React from \"react\";\n\nexport default function DeviceDetect() {\n  React.useEffect(() => {\n    console.log(`user's device is: ${window.navigator.userAgent}`);    \n  }, []);\n}",
    "language": "js",
    "range": {
      "start": 48,
      "length": 9
    }
  },
  {
    "id": 64,
    "statement": "Laquelle de ces méthodes n'est pas une méthode ReactDOM ?",
    "code": "- hydrate()\n- createPortal()\n- createElement()\n- findDOMNode()",
    "language": "js",
    "range": {
      "start": 29,
      "length": 17
    }
  },
  {
    "id": 65,
    "statement": "Sous React, quelle va être le rendu HTML du code suivant ?",
    "code": "const element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);\n\n- <h1 class=\"greeting\" value=\"Hello, world!\" />\n- <h1 class=\"greeting\">Hello, world!</h1>\n- <h1 className=\"greeting\" value=\"Hello, world!\" />\n- <h1 className=\"greeting\">Hello, world!</h1>",
    "language": "js",
    "range": {
      "start": 147,
      "length": 54
    }
  },
  {
    "id": 66,
    "statement": "A quoi sert la méthode \"bind\" dans le code suivant ?",
    "code": "this.handleClick = this.handleClick.bind(this);\n\n- Exécute la méthode handleClick et renvoi la valeur dans le contexte.\n- Créé une nouvelle instance de handleClick dans \"this\".\n- Permet de lier le contexte de l’objet référencé par \"this\" à la méthode handleClick.",
    "language": "js",
    "range": {
      "start": 177,
      "length": 86
    }
  },
  {
    "id": 67,
    "statement": "Pour la configuration de sécurité Spring suivante, une seule affirmation est vraie :",
    "code": "public void configure(HttpSecurity http) {\n  http.authorizeRequests()\n      .antMatchers(\"/users/**\").hasRole(\"ADMIN\")\n      .anyRequest().authenticated()\n}\n\n- Un admin peut accéder au chemin \"user\" et ses enfants.\n- Toute connexion requière une authentification.\n- Vous n’avez pas accès si vous n’avez pas un rôle admin.",
    "language": "java",
    "range": {
      "start": 215,
      "length": 48
    }
  },
  {
    "id": 68,
    "statement": "Trouvez la faute de syntaxe",
    "code": "import { Observable } from 'rxjs';\n\nconst data = new Observable(obs => {\n    obs.next(1000);\n    obs.complete();\n});\n\ndata.read({\n    next: value => console.log(value),\n    error: err => console.error(err),\n    complete: () => console.log('DONE!')\n});",
    "language": "js",
    "range": {
      "start": 125,
      "length": 6
    }
  },
  {
    "id": 69,
    "statement": "Parmi les affirmations suivantes, une seule est vraie :",
    "code": "- Un Observable produit une seule valeur.\n- Un Observable est annulable.\n- Un Observable possède deux méthodes uniquement.\n- Un Observable est traité immédiatement.",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 42,
      "length": 30
    }
  },
  {
    "id": 70,
    "statement": "Parmi les affirmations suivantes, une seule est fausse :",
    "code": "- Une Promesse produit une seule valeur.\n- Une Promesse est non annulable.\n- Une Promesse possède une centaine d'opérateurs de transformation natifs.\n- Une Promesse est traitée immédiatement.",
    "language": "js",
    "nocode": true,
    "range": {
      "start": 75,
      "length": 74
    }
  },
  {
    "id": 71,
    "statement": "Parmi les affirmations suivantes, une seule est fausse :",
    "code": "- Une Task représente une opération asynchrone.\n- La classe Task peut renvoyer un résultat.\n- Une Task peut avoir plusieurs processus se déroulant en même temps.\n- La Task ne prends pas en charge l'annulation.",
    "language": "cs",
    "nocode": true,
    "range": {
      "start": 162,
      "length": 47
    }
  },
  {
    "id": 72,
    "statement": "Parmi les affirmations suivantes, une seule est fausse :",
    "code": "- La classe Thread est utilisée pour créer et manipuler un Thread.\n- La classe Thread peut renvoyer un résultat.\n- Un Thread ne peut avoir qu'une tâche à la fois.\n- La classe Thread ne prends pas en charge l'annulation.",
    "language": "cs",
    "nocode": true,
    "range": {
      "start": 67,
      "length": 45
    }
  },
  {
    "id": 73,
    "statement": "Parmi les affirmations suivantes, une seule est fausse :",
    "code": "- La classe Thread est utilisée pour créer et manipuler un Thread.\n- La classe Thread peut renvoyer un résultat.\n- Un Thread ne peut avoir qu'une tâche à la fois.\n- La classe Thread ne prends pas en charge l'annulation.",
    "language": "cs",
    "nocode": true,
    "range": {
      "start": 67,
      "length": 45
    }
  },
  {
    "id": 74,
    "statement": "Trouvez la faute de syntaxe",
    "code": "public class MyThread {\n  public static void main(String[] args){\n    Thread thread = new Thread(new Job());\n    thread.run();\n  }\n}",
    "language": "java",
    "range": {
      "start": 119,
      "length": 5
    }
  },
  {
    "id": 75,
    "statement": "Trouvez la faute de syntaxe",
    "code": "public class Job extends Runnable {\n  @Override\n  public void run(){\n    System.out.println(\"My job\");\n  }\n}",
    "language": "java",
    "range": {
      "start": 17,
      "length": 7
    }
  },
  {
    "id": 76,
    "statement": "Trouvez la faute de syntaxe",
    "code": "public static void Main(string[] args) {  \n  Task<string> obTask = Task.start(() => (return “Hello”));  \n  Console.WriteLine(obTask.result);  \n}",
    "language": "cs",
    "range": {
      "start": 78,
      "length": 5
    }
  },
  {
    "id": 77,
    "statement": "Quel sera le rendu du composant React ci-dessous ?",
    "code": "render() {\n  const count = 0;\n  return (\n    <div>\n      { count && <h1>Messages: {count}</h1>}\n    </div>\n  );\n}\n\n- null\n- <div></div>\n- <div>0</div>\n- <div><h1>Messages: 0</h1></div>",
    "language": "js",
    "range": {
      "start": 180,
      "length": 27
    }
  }
]